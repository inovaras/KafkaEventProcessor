services:
  service-api:
    build:
      context: .
    ports:
      - "7000:7000"
    depends_on:
    - kafka-0

    restart: on-failure
    networks:
      middle-practicum:
        ipv4_address: 172.18.0.15

  # service-etl:
  #   build:
  #     context: .
  #   networks:
  #     middle-practicum:
  #       ipv4_address: 172.18.0.16

  kafka-0:
    image: bitnami/kafka:3.4
    ports:
    - "9094:9094"
    environment:
    - KAFKA_ENABLE_KRAFT=yes #  разрешить использование протокола KRaft;
    - KAFKA_CFG_PROCESS_ROLES=broker,controller # узел может входить в кворум как контроллер, но также как брокер обеспечивает хранение разделов и добавление новых сообщений в разделы;
    - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER # определение типа слушателя для публикации контроллера
    - ALLOW_PLAINTEXT_LISTENER=yes
    - KAFKA_CFG_NODE_ID=0
    - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093 #  идентификатор контроллера (как части кворума) и его адрес и порт (здесь нужно перечислить адреса всех известных контроллеров);
    - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv # идентификатор кластера (должен быть одинаковым у всех контроллеров и брокеров), его мы получим после первого запуска;
    - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
    - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-0:9092,EXTERNAL://172.18.0.17:9094 # на каких адресах и портах брокер Kafka будет прослушивать входящие соединения. Это включает в себя все типы соединений, внутри докер-сети или локальные. Здесь мы говорим Kafka, где искать входящие запросы. В вашем конфигурационном файле вы указываете три слушателя: PLAINTEXT://:9092, CONTROLLER://:9093 и EXTERNAL://:9094. Первые два предназначены для внутренних коммуникаций внутри Docker, а последний — для внешних соединений с хост-машиной;
    - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
    volumes:
      - kafka_0_data:/bitnami/kafka
    networks:
      middle-practicum:
        ipv4_address: 172.18.0.17


  kafka-1:
    image: bitnami/kafka:3.4
    ports:
      - "9095:9095"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9095
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-1:9092,EXTERNAL://172.18.0.18:9095
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT

    volumes:
      - kafka_1_data:/bitnami/kafka
    networks:
      middle-practicum:
        ipv4_address: 172.18.0.18

  kafka-2:
    image: bitnami/kafka:3.4
    ports:
      - "9096:9096"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9096
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-2:9092,EXTERNAL://172.18.0.19:9096
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
    volumes:
      - kafka_2_data:/bitnami/kafka
    networks:
      middle-practicum:
        ipv4_address: 172.18.0.19

  ui:
    image: provectuslabs/kafka-ui:v0.7.0
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka-0:9092
      - KAFKA_CLUSTERS_0_NAME=kraft
    networks:
      middle-practicum:
        ipv4_address: 172.18.0.20


  # clickhouse-node1:
  #   image: clickhouse/clickhouse-server:23
  #   container_name: clickhouse-node1
  #   hostname: clickhouse-node1
  #   ports:
  #     - "8123:8123"
  #     - "9000:9000"
  #   volumes:
  #     - ./data/node1:/etc/clickhouse-server
  #   depends_on:
  #     - zookeeper
  #   build:
  #     context: .
  #   networks:
  #     middle-practicum:
  #       ipv4_address: 172.18.0.21

  # clickhouse-node2:
  #   image: clickhouse/clickhouse-server:23
  #   container_name: clickhouse-node2
  #   hostname: clickhouse-node2
  #   ports:
  #     - "8124:8123"
  #     - "9001:9000"
  #   volumes:
  #     - ./data/node2:/etc/clickhouse-server
  #   depends_on:
  #     - zookeeper
  #   build:
  #     context: .
  #   networks:
  #     middle-practicum:
  #       ipv4_address: 172.18.0.22

volumes:
  kafka_0_data:
  kafka_1_data:
  kafka_2_data:



networks:
  middle-practicum:
    external: True
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/24
          gateway: 172.18.0.1